cmake_minimum_required(VERSION 3.10)
project(AudioEditorSimple VERSION 1.0.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Default to Release build if not specified
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Compiler flags
if(CMAKE_BUILD_TYPE MATCHES Debug)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O0 -Wall")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -DNDEBUG")
endif()

# Create a library from the audio editor source
add_library(AudioEditorSimpleLib STATIC
    SoundSegment_Simple.cpp
)

target_include_directories(AudioEditorSimpleLib PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
)

# Create the demo executable
add_executable(demo_simple
    demo_simple.cpp
)

target_link_libraries(demo_simple AudioEditorSimpleLib)

# Print configuration info
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "C++ standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "Compiler: ${CMAKE_CXX_COMPILER_ID}")

# Installation rules
install(TARGETS demo_simple AudioEditorSimpleLib
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)

install(FILES SoundSegment_Simple.hpp
    DESTINATION include
) 